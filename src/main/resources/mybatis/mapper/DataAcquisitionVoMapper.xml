<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.hqgd.pms.dao.dataAcquisition.DataAcquisitionVoMapper">
  <resultMap id="BaseResultMap" type="com.hqgd.pms.domain.DataAcquisitionVo">
    <id column="ID" jdbcType="INTEGER" property="id" />
    <result column="EQUIPMENT_ID" jdbcType="VARCHAR" property="equipmentId" />
    <result column="EQUIPMENT_NAME" jdbcType="VARCHAR" property="equipmentName" />
    <result column="ADDRESS" jdbcType="VARCHAR" property="address" />
    <result column="CHANNEL_NUM" jdbcType="VARCHAR" property="channelNum" />
    <result column="OPTICAL_FIBER_POSITION" jdbcType="VARCHAR" property="opticalFiberPosition" />
    <result column="TEMPERATURE" jdbcType="DECIMAL" property="temperature" />
    <result column="PD" jdbcType="VARCHAR" property="pd" />
    <result column="UV" jdbcType="VARCHAR" property="uv" />
    <result column="STATE" jdbcType="INTEGER" property="state" />
    <result column="MESSAGE" jdbcType="VARCHAR" property="message" />
    <result column="RECEIVE_TIME" jdbcType="TIMESTAMP" property="receiveTime" />
    <result column="DUTY_PERSON" jdbcType="VARCHAR" property="dutyPerson" />
    <result column="TEL" jdbcType="VARCHAR" property="tel" />
    <result column="MAX_TEM" jdbcType="VARCHAR" property="maxTem" />
    <result column="MIN_TEM" jdbcType="VARCHAR" property="minTem" />
    <result column="TOTAL" jdbcType="INTEGER" property="total" />
    <result column="NUM_OF_CH" jdbcType="INTEGER" property="numOfCh" />
    <result column="USER_NAME" jdbcType="VARCHAR" property="userName" /> 
  </resultMap>
  <resultMap id="ChannelResultMap" type="java.lang.String">
    <result column="CHANNEL_NUM" jdbcType="VARCHAR" property="channelNum" />
  </resultMap>
  <resultMap id="TimeResultMap" type="java.util.Date">
    <result column="RECEIVE_TIME" jdbcType="TIMESTAMP" property="receiveTime" />
  </resultMap>
  <resultMap id="TempertureList" type="java.lang.Float">
    <result column="TEMPERATURE" jdbcType="DECIMAL" property="temperature" />
  </resultMap>
  <resultMap id="ExtremumList" type="com.hqgd.pms.domain.ChannelExtremum">
  	<result column="CHANNEL_NUM" jdbcType="VARCHAR" property="channel" />
  	<result column="MAXINUM" jdbcType="DECIMAL" property="max" />
    <result column="MININUM" jdbcType="DECIMAL" property="min" />
  </resultMap>
  <resultMap id="channelDataMap"  type="com.hqgd.pms.domain.ChannelDatasUtil">
  	<result column="RECEIVE_TIME" jdbcType="VARCHAR" property="receiveTime" />
  	<result column="CH1" jdbcType="DECIMAL" property="CH1" />
  	<result column="CH2" jdbcType="DECIMAL" property="CH2" />
  	<result column="CH3" jdbcType="DECIMAL" property="CH3" />
  	<result column="CH4" jdbcType="DECIMAL" property="CH4" />
  	<result column="CH5" jdbcType="DECIMAL" property="CH5" />
  	<result column="CH6" jdbcType="DECIMAL" property="CH6" />
  	<result column="CH7" jdbcType="DECIMAL" property="CH7" />
  	<result column="CH8" jdbcType="DECIMAL" property="CH8" />
  	<result column="CH9" jdbcType="DECIMAL" property="CH9" />
  	<result column="CH10" jdbcType="DECIMAL" property="CH10" />
  	<result column="CH11" jdbcType="DECIMAL" property="CH11" />
  	<result column="CH12" jdbcType="DECIMAL" property="CH12" />
  	<result column="CH13" jdbcType="DECIMAL" property="CH13" />
  	<result column="CH14" jdbcType="DECIMAL" property="CH14" />
  	<result column="CH15" jdbcType="DECIMAL" property="CH15" />
  	<result column="CH16" jdbcType="DECIMAL" property="CH16" />
  	<result column="CH17" jdbcType="DECIMAL" property="CH17" />
  	<result column="CH18" jdbcType="DECIMAL" property="CH18" />
  </resultMap>
  
  
  <sql id="Base_Column_List">
    ID, EQUIPMENT_ID, EQUIPMENT_NAME, ADDRESS, CHANNEL_NUM, OPTICAL_FIBER_POSITION, TEMPERATURE, 
    PD, UV, STATE, MESSAGE, CONVERT ( VARCHAR ( 100 ), RECEIVE_TIME, 20 ) AS RECEIVE_TIME, DUTY_PERSON, TEL,NUM_OF_CH
  </sql>
  <delete id="deleter" parameterType="java.util.HashMap">
    DELETE 
FROM
	${table} 
WHERE
	RECEIVE_TIME <![CDATA[ < ]]> #{lastTime,jdbcType=VARCHAR};
	
  </delete>
  
	<insert id="insertt" parameterType="java.util.HashMap">
	INSERT INTO ${tabler} (
EQUIPMENT_ID,
EQUIPMENT_NAME,
ADDRESS,
CHANNEL_NUM,
OPTICAL_FIBER_POSITION,
TEMPERATURE,
PD,
UV,
STATE,
MESSAGE,
RECEIVE_TIME,
DUTY_PERSON,
TEL,
NUM_OF_CH 
) SELECT
EQUIPMENT_ID,
EQUIPMENT_NAME,
ADDRESS,
CHANNEL_NUM,
OPTICAL_FIBER_POSITION,
TEMPERATURE,
PD,
UV,
STATE,
MESSAGE,
RECEIVE_TIME,
DUTY_PERSON,
TEL,
NUM_OF_CH 
FROM
	${tablef}
	</insert>
  <select id="selectRealTimeDataById"  resultMap="BaseResultMap">
   SELECT DISTINCT
	t.EQUIPMENT_ID,
	t.EQUIPMENT_NAME,
	t.ADDRESS,
	t.CHANNEL_NUM,
	t.OPTICAL_FIBER_POSITION,
	t.TEMPERATURE,
	t.STATE,
	t.MESSAGE,
	t.NUM_OF_CH,
	CONVERT ( VARCHAR ( 100 ), t.RECEIVE_TIME, 20 ) AS RECEIVE_TIME,
	CAST ( REPLACE ( CHANNEL_NUM, 'CH', '0' ) AS INT ) AS PD 
FROM
	( SELECT EQUIPMENT_ID, CONVERT ( VARCHAR ( 100 ), MAX( RECEIVE_TIME ), 20 ) AS RECEIVE_TIME FROM ${table}  GROUP BY EQUIPMENT_ID ) AS temp
	LEFT JOIN ${table} AS t ON temp.EQUIPMENT_ID = t.EQUIPMENT_ID 
	AND temp.RECEIVE_TIME = t.RECEIVE_TIME
WHERE
	t.EQUIPMENT_ID = #{equipmentId}
ORDER BY
	CAST(REPLACE(CHANNEL_NUM, 'CH','0') AS int) ASC
  </select>
  
  <select id="selectAllEquipRealtime" parameterType="java.lang.String" resultMap="BaseResultMap">
   SELECT
	t.EQUIPMENT_ID,
	t.EQUIPMENT_NAME,
	t.CHANNEL_NUM,
	t.OPTICAL_FIBER_POSITION,
	t.TEMPERATURE,
	t.STATE,
	t.MESSAGE,
	t.RECEIVE_TIME 
FROM
	( SELECT EQUIPMENT_ID, MAX( RECEIVE_TIME ) AS RECEIVE_TIME FROM hq_equipment_monitor_data GROUP BY EQUIPMENT_ID ) AS temp
	LEFT JOIN hq_equipment_monitor_data AS t ON temp.EQUIPMENT_ID = t.EQUIPMENT_ID 
	AND temp.RECEIVE_TIME = t.RECEIVE_TIME
	LEFT JOIN hq_equipment_info AS i ON i.EQUIPMENT_ID = t.EQUIPMENT_ID 
WHERE 1=1
     <if test="_parameter != null and _parameter != ''">  
      AND i.USER_NAME = #{_parameter}  
     </if>  
	AND STATE != '5'
  </select> 
  <select id="selectHistoricalDataById" parameterType="java.util.HashMap" resultMap="BaseResultMap">
    SELECT
	<include refid="Base_Column_List" /> 
FROM
	${table} w1 
WHERE
	ID IN (
SELECT
	top ${limit} ID 
FROM
	(
SELECT
	top ${total} ID,
	EQUIPMENT_ID,
	EQUIPMENT_NAME 
FROM
	${table} 
WHERE
	EQUIPMENT_ID = #{equipmentId,jdbcType=VARCHAR} 
	AND RECEIVE_TIME <![CDATA[ >= ]]> #{startTime,jdbcType=VARCHAR} 
    AND RECEIVE_TIME <![CDATA[ <= ]]> #{endTime,jdbcType=VARCHAR} 
    <if test="state != null and state != 0">AND state!=5</if> 
ORDER BY
	ID DESC 
	) w 
ORDER BY
	w.ID ASC 
	) 
ORDER BY
	w1.ID DESC
  </select>
  
  <select id="recordExport" parameterType="java.util.HashMap" resultMap="BaseResultMap">
    SELECT
	<include refid="Base_Column_List" /> 
    FROM
	    ${table} w1 
    WHERE
        1=1
	  AND EQUIPMENT_ID = #{equipmentId,jdbcType=VARCHAR} 
	  AND RECEIVE_TIME <![CDATA[ >= ]]> #{startTime,jdbcType=VARCHAR} 
      AND RECEIVE_TIME <![CDATA[ <= ]]> #{endTime,jdbcType=VARCHAR} 
     <if test="state != null and state != 0">AND state!=5</if>  
    ORDER BY
      ID DESC 
  </select>
  
  <select id="selectTotal" parameterType="java.util.HashMap" resultType="java.lang.Integer">
    SELECT 
  		COUNT(ID) AS TOTAL
	FROM
  		${table} 
	WHERE EQUIPMENT_ID = #{equipmentId,jdbcType=VARCHAR} 
      AND RECEIVE_TIME <![CDATA[ >= ]]> #{startTime,jdbcType=VARCHAR} 
      AND RECEIVE_TIME <![CDATA[ <= ]]> #{endTime,jdbcType=VARCHAR} 
      <if test="state != null and state != 0">AND state!=5</if>
  </select>
  
  <select id="selectCurveById" parameterType="java.util.HashMap" resultMap="BaseResultMap">
    SELECT
	CHANNEL_NUM,
	RECEIVE_TIME,
	TEMPERATURE 
	FROM
  		${table} 
	WHERE EQUIPMENT_ID = #{equipmentId,jdbcType=VARCHAR} 
      AND RECEIVE_TIME <![CDATA[ >= ]]> #{startTime,jdbcType=VARCHAR} 
      AND RECEIVE_TIME <![CDATA[ <= ]]> #{endTime,jdbcType=VARCHAR} 
      <if test="state != null and state != 0">AND state!=5</if> 
    ORDER BY
	  CAST( REPLACE ( CHANNEL_NUM, 'CH', '0' ) AS INT ),ID ASC  
  </select>
  <select id="selectHistoricalCurveById" parameterType="java.util.HashMap" resultMap="BaseResultMap">
    SELECT
    	CHANNEL_NUM,
    	[TEMPERATURE] = stuff (
    	(
    SELECT
    	',' + CAST( TEMPERATURE AS VARCHAR ) 
    FROM
    	${table} t 
    WHERE
    	t.CHANNEL_NUM = m.CHANNEL_NUM 
    	AND EQUIPMENT_ID = #{equipmentId,jdbcType=VARCHAR} 
        AND RECEIVE_TIME <![CDATA[ >= ]]> #{startTime,jdbcType=VARCHAR} 
        AND RECEIVE_TIME <![CDATA[ <= ]]> #{endTime,jdbcType=VARCHAR} ORDER BY RECEIVE_TIME FOR XML path ( '' ) 
    	),
    	1,
    	1,
    	'' 
    	),
    	[RECEIVE_TIME] = stuff (
    	(
    SELECT
    	',' + CAST( CONVERT ( VARCHAR ( 100 ), RECEIVE_TIME, 20 ) AS VARCHAR ) 
    FROM
    	${table} t 
    WHERE
    	t.CHANNEL_NUM = m.CHANNEL_NUM 
    	AND EQUIPMENT_ID = #{equipmentId,jdbcType=VARCHAR} 
        AND RECEIVE_TIME <![CDATA[ >= ]]> #{startTime,jdbcType=VARCHAR} 
        AND RECEIVE_TIME <![CDATA[ <= ]]> #{endTime,jdbcType=VARCHAR} ORDER BY RECEIVE_TIME FOR XML path ( '' ) 
    	),
    	1,
    	1,
    	'' 
    	)     	
    FROM
    	${table} m
    WHERE
      1=1
      AND EQUIPMENT_ID = #{equipmentId,jdbcType=VARCHAR} 
      AND RECEIVE_TIME <![CDATA[ >= ]]> #{startTime,jdbcType=VARCHAR} 
      AND RECEIVE_TIME <![CDATA[ <= ]]> #{endTime,jdbcType=VARCHAR} 
    GROUP BY
    	CHANNEL_NUM 
    ORDER BY
    	CAST(REPLACE(CHANNEL_NUM, 'CH','0') AS int) ASC
    	<!-- CHANNEL_NUM ASC -->
  </select>
  
  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from hq_equipment_monitor_data
    where ID = #{id,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    delete from hq_equipment_monitor_data
    where ID = #{id,jdbcType=INTEGER}
  </delete>
  <insert id="insert" parameterType="com.hqgd.pms.domain.DataAcquisitionVo">
    insert into hq_equipment_monitor_data (EQUIPMENT_ID, EQUIPMENT_NAME, 
      ADDRESS, CHANNEL_NUM, OPTICAL_FIBER_POSITION, 
      TEMPERATURE, PD, UV, 
      STATE, MESSAGE, RECEIVE_TIME, 
      DUTY_PERSON, TEL,NUM_OF_CH)
    values (#{equipmentId,jdbcType=VARCHAR}, #{equipmentName,jdbcType=VARCHAR}, 
      #{address,jdbcType=VARCHAR}, #{channelNum,jdbcType=VARCHAR}, #{opticalFiberPosition,jdbcType=VARCHAR}, 
      #{temperature,jdbcType=DECIMAL}, #{pd,jdbcType=VARCHAR}, #{uv,jdbcType=VARCHAR}, 
      #{state,jdbcType=INTEGER}, #{message,jdbcType=VARCHAR}, #{receiveTime,jdbcType=TIMESTAMP}, 
      #{dutyPerson,jdbcType=VARCHAR}, #{tel,jdbcType=VARCHAR},#{numOfCh,jdbcType=INTEGER})
  </insert>
  <insert id="insert1" parameterType="com.hqgd.pms.domain.DataAcquisitionVo">
    insert into hq_equipment_monitor_data_1 (EQUIPMENT_ID, EQUIPMENT_NAME, 
      ADDRESS, CHANNEL_NUM, OPTICAL_FIBER_POSITION, 
      TEMPERATURE, PD, UV, 
      STATE, MESSAGE, RECEIVE_TIME, 
      DUTY_PERSON, TEL,NUM_OF_CH)
    values (#{equipmentId,jdbcType=VARCHAR}, #{equipmentName,jdbcType=VARCHAR}, 
      #{address,jdbcType=VARCHAR}, #{channelNum,jdbcType=VARCHAR}, #{opticalFiberPosition,jdbcType=VARCHAR}, 
      #{temperature,jdbcType=DECIMAL}, #{pd,jdbcType=VARCHAR}, #{uv,jdbcType=VARCHAR}, 
      #{state,jdbcType=INTEGER}, #{message,jdbcType=VARCHAR}, #{receiveTime,jdbcType=TIMESTAMP}, 
      #{dutyPerson,jdbcType=VARCHAR}, #{tel,jdbcType=VARCHAR},#{numOfCh,jdbcType=INTEGER})
  </insert>
  <insert id="insert2" parameterType="com.hqgd.pms.domain.DataAcquisitionVo">
    insert into hq_equipment_monitor_data_2 (EQUIPMENT_ID, EQUIPMENT_NAME, 
      ADDRESS, CHANNEL_NUM, OPTICAL_FIBER_POSITION, 
      TEMPERATURE, PD, UV, 
      STATE, MESSAGE, RECEIVE_TIME, 
      DUTY_PERSON, TEL,NUM_OF_CH)
    values (#{equipmentId,jdbcType=VARCHAR}, #{equipmentName,jdbcType=VARCHAR}, 
      #{address,jdbcType=VARCHAR}, #{channelNum,jdbcType=VARCHAR}, #{opticalFiberPosition,jdbcType=VARCHAR}, 
      #{temperature,jdbcType=DECIMAL}, #{pd,jdbcType=VARCHAR}, #{uv,jdbcType=VARCHAR}, 
      #{state,jdbcType=INTEGER}, #{message,jdbcType=VARCHAR}, #{receiveTime,jdbcType=TIMESTAMP}, 
      #{dutyPerson,jdbcType=VARCHAR}, #{tel,jdbcType=VARCHAR},#{numOfCh,jdbcType=INTEGER})
  </insert>
  <insert id="insert3" parameterType="com.hqgd.pms.domain.DataAcquisitionVo">
    insert into hq_equipment_monitor_data_3 (EQUIPMENT_ID, EQUIPMENT_NAME, 
      ADDRESS, CHANNEL_NUM, OPTICAL_FIBER_POSITION, 
      TEMPERATURE, PD, UV, 
      STATE, MESSAGE, RECEIVE_TIME, 
      DUTY_PERSON, TEL,NUM_OF_CH)
    values (#{equipmentId,jdbcType=VARCHAR}, #{equipmentName,jdbcType=VARCHAR}, 
      #{address,jdbcType=VARCHAR}, #{channelNum,jdbcType=VARCHAR}, #{opticalFiberPosition,jdbcType=VARCHAR}, 
      #{temperature,jdbcType=DECIMAL}, #{pd,jdbcType=VARCHAR}, #{uv,jdbcType=VARCHAR}, 
      #{state,jdbcType=INTEGER}, #{message,jdbcType=VARCHAR}, #{receiveTime,jdbcType=TIMESTAMP}, 
      #{dutyPerson,jdbcType=VARCHAR}, #{tel,jdbcType=VARCHAR},#{numOfCh,jdbcType=INTEGER})
  </insert>
  <insert id="insert4" parameterType="com.hqgd.pms.domain.DataAcquisitionVo">
    insert into hq_equipment_monitor_data_4 (EQUIPMENT_ID, EQUIPMENT_NAME, 
      ADDRESS, CHANNEL_NUM, OPTICAL_FIBER_POSITION, 
      TEMPERATURE, PD, UV, 
      STATE, MESSAGE, RECEIVE_TIME, 
      DUTY_PERSON, TEL,NUM_OF_CH)
    values (#{equipmentId,jdbcType=VARCHAR}, #{equipmentName,jdbcType=VARCHAR}, 
      #{address,jdbcType=VARCHAR}, #{channelNum,jdbcType=VARCHAR}, #{opticalFiberPosition,jdbcType=VARCHAR}, 
      #{temperature,jdbcType=DECIMAL}, #{pd,jdbcType=VARCHAR}, #{uv,jdbcType=VARCHAR}, 
      #{state,jdbcType=INTEGER}, #{message,jdbcType=VARCHAR}, #{receiveTime,jdbcType=TIMESTAMP}, 
      #{dutyPerson,jdbcType=VARCHAR}, #{tel,jdbcType=VARCHAR},#{numOfCh,jdbcType=INTEGER})
  </insert>
  
  <insert id="insertr1" parameterType="com.hqgd.pms.domain.DataAcquisitionVo">
    insert into hq_equipment_monitor_data_r1 (EQUIPMENT_ID, EQUIPMENT_NAME, 
      ADDRESS, CHANNEL_NUM, OPTICAL_FIBER_POSITION, 
      TEMPERATURE, PD, UV, 
      STATE, MESSAGE, RECEIVE_TIME, 
      DUTY_PERSON, TEL,NUM_OF_CH)
    values (#{equipmentId,jdbcType=VARCHAR}, #{equipmentName,jdbcType=VARCHAR}, 
      #{address,jdbcType=VARCHAR}, #{channelNum,jdbcType=VARCHAR}, #{opticalFiberPosition,jdbcType=VARCHAR}, 
      #{temperature,jdbcType=DECIMAL}, #{pd,jdbcType=VARCHAR}, #{uv,jdbcType=VARCHAR}, 
      #{state,jdbcType=INTEGER}, #{message,jdbcType=VARCHAR}, #{receiveTime,jdbcType=TIMESTAMP}, 
      #{dutyPerson,jdbcType=VARCHAR}, #{tel,jdbcType=VARCHAR},#{numOfCh,jdbcType=INTEGER})
  </insert>
  <insert id="insertr2" parameterType="com.hqgd.pms.domain.DataAcquisitionVo">
    insert into hq_equipment_monitor_data_r2 (EQUIPMENT_ID, EQUIPMENT_NAME, 
      ADDRESS, CHANNEL_NUM, OPTICAL_FIBER_POSITION, 
      TEMPERATURE, PD, UV, 
      STATE, MESSAGE, RECEIVE_TIME, 
      DUTY_PERSON, TEL,NUM_OF_CH)
    values (#{equipmentId,jdbcType=VARCHAR}, #{equipmentName,jdbcType=VARCHAR}, 
      #{address,jdbcType=VARCHAR}, #{channelNum,jdbcType=VARCHAR}, #{opticalFiberPosition,jdbcType=VARCHAR}, 
      #{temperature,jdbcType=DECIMAL}, #{pd,jdbcType=VARCHAR}, #{uv,jdbcType=VARCHAR}, 
      #{state,jdbcType=INTEGER}, #{message,jdbcType=VARCHAR}, #{receiveTime,jdbcType=TIMESTAMP}, 
      #{dutyPerson,jdbcType=VARCHAR}, #{tel,jdbcType=VARCHAR},#{numOfCh,jdbcType=INTEGER})
  </insert>
  <insert id="insertr3" parameterType="com.hqgd.pms.domain.DataAcquisitionVo">
    insert into hq_equipment_monitor_data_r3 (EQUIPMENT_ID, EQUIPMENT_NAME, 
      ADDRESS, CHANNEL_NUM, OPTICAL_FIBER_POSITION, 
      TEMPERATURE, PD, UV, 
      STATE, MESSAGE, RECEIVE_TIME, 
      DUTY_PERSON, TEL,NUM_OF_CH)
    values (#{equipmentId,jdbcType=VARCHAR}, #{equipmentName,jdbcType=VARCHAR}, 
      #{address,jdbcType=VARCHAR}, #{channelNum,jdbcType=VARCHAR}, #{opticalFiberPosition,jdbcType=VARCHAR}, 
      #{temperature,jdbcType=DECIMAL}, #{pd,jdbcType=VARCHAR}, #{uv,jdbcType=VARCHAR}, 
      #{state,jdbcType=INTEGER}, #{message,jdbcType=VARCHAR}, #{receiveTime,jdbcType=TIMESTAMP}, 
      #{dutyPerson,jdbcType=VARCHAR}, #{tel,jdbcType=VARCHAR},#{numOfCh,jdbcType=INTEGER})
  </insert>
  <insert id="insertr4" parameterType="com.hqgd.pms.domain.DataAcquisitionVo">
    insert into hq_equipment_monitor_data_r4 (EQUIPMENT_ID, EQUIPMENT_NAME, 
      ADDRESS, CHANNEL_NUM, OPTICAL_FIBER_POSITION, 
      TEMPERATURE, PD, UV, 
      STATE, MESSAGE, RECEIVE_TIME, 
      DUTY_PERSON, TEL,NUM_OF_CH)
    values (#{equipmentId,jdbcType=VARCHAR}, #{equipmentName,jdbcType=VARCHAR}, 
      #{address,jdbcType=VARCHAR}, #{channelNum,jdbcType=VARCHAR}, #{opticalFiberPosition,jdbcType=VARCHAR}, 
      #{temperature,jdbcType=DECIMAL}, #{pd,jdbcType=VARCHAR}, #{uv,jdbcType=VARCHAR}, 
      #{state,jdbcType=INTEGER}, #{message,jdbcType=VARCHAR}, #{receiveTime,jdbcType=TIMESTAMP}, 
      #{dutyPerson,jdbcType=VARCHAR}, #{tel,jdbcType=VARCHAR},#{numOfCh,jdbcType=INTEGER})
  </insert>
  <insert id="insertSelective" parameterType="com.hqgd.pms.domain.DataAcquisitionVo">
    insert into hq_equipment_monitor_data
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="id != null">
        ID,
      </if>
      <if test="equipmentId != null">
        EQUIPMENT_ID,
      </if>
      <if test="equipmentName != null">
        EQUIPMENT_NAME,
      </if>
      <if test="address != null">
        ADDRESS,
      </if>
      <if test="channelNum != null">
        CHANNEL_NUM,
      </if>
      <if test="opticalFiberPosition != null">
        OPTICAL_FIBER_POSITION,
      </if>
      <if test="temperature != null">
        TEMPERATURE,
      </if>
      <if test="pd != null">
        PD,
      </if>
      <if test="uv != null">
        UV,
      </if>
      <if test="state != null">
        STATE,
      </if>
      <if test="message != null">
        MESSAGE,
      </if>
      <if test="receiveTime != null">
        RECEIVE_TIME,
      </if>
      <if test="dutyPerson != null">
        DUTY_PERSON,
      </if>
      <if test="tel != null">
        TEL,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="id != null">
        #{id,jdbcType=INTEGER},
      </if>
      <if test="equipmentId != null">
        #{equipmentId,jdbcType=VARCHAR},
      </if>
      <if test="equipmentName != null">
        #{equipmentName,jdbcType=VARCHAR},
      </if>
      <if test="address != null">
        #{address,jdbcType=VARCHAR},
      </if>
      <if test="channelNum != null">
        #{channelNum,jdbcType=VARCHAR},
      </if>
      <if test="opticalFiberPosition != null">
        #{opticalFiberPosition,jdbcType=VARCHAR},
      </if>
      <if test="temperature != null">
        #{temperature,jdbcType=DECIMAL},
      </if>
      <if test="pd != null">
        #{pd,jdbcType=VARCHAR},
      </if>
      <if test="uv != null">
        #{uv,jdbcType=VARCHAR},
      </if>
      <if test="state != null">
        #{state,jdbcType=INTEGER},
      </if>
      <if test="message != null">
        #{message,jdbcType=VARCHAR},
      </if>
      <if test="receiveTime != null">
        #{receiveTime,jdbcType=TIMESTAMP},
      </if>
      <if test="dutyPerson != null">
        #{dutyPerson,jdbcType=VARCHAR},
      </if>
      <if test="tel != null">
        #{tel,jdbcType=VARCHAR},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="com.hqgd.pms.domain.DataAcquisitionVo">
    update hq_equipment_monitor_data
    <set>
      <if test="equipmentId != null">
        EQUIPMENT_ID = #{equipmentId,jdbcType=VARCHAR},
      </if>
      <if test="equipmentName != null">
        EQUIPMENT_NAME = #{equipmentName,jdbcType=VARCHAR},
      </if>
      <if test="address != null">
        ADDRESS = #{address,jdbcType=VARCHAR},
      </if>
      <if test="channelNum != null">
        CHANNEL_NUM = #{channelNum,jdbcType=VARCHAR},
      </if>
      <if test="opticalFiberPosition != null">
        OPTICAL_FIBER_POSITION = #{opticalFiberPosition,jdbcType=VARCHAR},
      </if>
      <if test="temperature != null">
        TEMPERATURE = #{temperature,jdbcType=DECIMAL},
      </if>
      <if test="pd != null">
        PD = #{pd,jdbcType=VARCHAR},
      </if>
      <if test="uv != null">
        UV = #{uv,jdbcType=VARCHAR},
      </if>
      <if test="state != null">
        STATE = #{state,jdbcType=INTEGER},
      </if>
      <if test="message != null">
        MESSAGE = #{message,jdbcType=VARCHAR},
      </if>
      <if test="receiveTime != null">
        RECEIVE_TIME = #{receiveTime,jdbcType=TIMESTAMP},
      </if>
      <if test="dutyPerson != null">
        DUTY_PERSON = #{dutyPerson,jdbcType=VARCHAR},
      </if>
      <if test="tel != null">
        TEL = #{tel,jdbcType=VARCHAR},
      </if>
    </set>
    where ID = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.hqgd.pms.domain.DataAcquisitionVo">
    update hq_equipment_monitor_data
    set EQUIPMENT_ID = #{equipmentId,jdbcType=VARCHAR},
      EQUIPMENT_NAME = #{equipmentName,jdbcType=VARCHAR},
      ADDRESS = #{address,jdbcType=VARCHAR},
      CHANNEL_NUM = #{channelNum,jdbcType=VARCHAR},
      OPTICAL_FIBER_POSITION = #{opticalFiberPosition,jdbcType=VARCHAR},
      TEMPERATURE = #{temperature,jdbcType=DECIMAL},
      PD = #{pd,jdbcType=VARCHAR},
      UV = #{uv,jdbcType=VARCHAR},
      STATE = #{state,jdbcType=INTEGER},
      MESSAGE = #{message,jdbcType=VARCHAR},
      RECEIVE_TIME = #{receiveTime,jdbcType=TIMESTAMP},
      DUTY_PERSON = #{dutyPerson,jdbcType=VARCHAR},
      TEL = #{tel,jdbcType=VARCHAR}
    where ID = #{id,jdbcType=INTEGER}
  </update>
  
  <!-- 获取所有的通道名称集合 -->
  <select id="selectAllChannels" parameterType="String" resultMap="ChannelResultMap">
  	select CHANNEL_NUM 
  	from
  		${table}
  	where
		EQUIPMENT_ID = #{equipmentId,jdbcType=VARCHAR} 
		GROUP BY
			CHANNEL_NUM 
		ORDER BY
			CAST(REPLACE(CHANNEL_NUM, 'CH','0') AS int) ASC
  </select>
  <select id="selectAllChannels1" parameterType="String" resultMap="ChannelResultMap">
  	select CHANNEL_NUM 
  	from hq_equipment_monitor_data_r 
  	where
		EQUIPMENT_ID = #{equipmentId,jdbcType=VARCHAR} 
		GROUP BY
			CHANNEL_NUM 
		ORDER BY
			CAST(REPLACE(CHANNEL_NUM, 'CH','0') AS int) ASC
  </select>
  <select id="selectAllChannels2" parameterType="String" resultMap="ChannelResultMap">
  	select CHANNEL_NUM 
  	from hq_equipment_monitor_data_r 
  	where
		EQUIPMENT_ID = #{equipmentId,jdbcType=VARCHAR} 
		GROUP BY
			CHANNEL_NUM 
		ORDER BY
			CAST(REPLACE(CHANNEL_NUM, 'CH','0') AS int) ASC
  </select>
  <select id="selectAllChannels3" parameterType="String" resultMap="ChannelResultMap">
  	select CHANNEL_NUM 
  	from hq_equipment_monitor_data_r 
  	where
		EQUIPMENT_ID = #{equipmentId,jdbcType=VARCHAR} 
		GROUP BY
			CHANNEL_NUM 
		ORDER BY
			CAST(REPLACE(CHANNEL_NUM, 'CH','0') AS int) ASC
  </select>
  <select id="selectAllChannels4" parameterType="String" resultMap="ChannelResultMap">
  	select CHANNEL_NUM 
  	from hq_equipment_monitor_data_r 
  	where
		EQUIPMENT_ID = #{equipmentId,jdbcType=VARCHAR} 
		GROUP BY
			CHANNEL_NUM 
		ORDER BY
			CAST(REPLACE(CHANNEL_NUM, 'CH','0') AS int) ASC
  </select>
  <select id="selectAllTimestamp1" parameterType="java.util.Map" resultMap="TimeResultMap">
	select DISTINCT CONVERT(DATETIME,RECEIVE_TIME) AS RECEIVE_TIME
	from hq_equipment_monitor_data_r 
	where
		EQUIPMENT_ID = #{equipmentId,jdbcType=VARCHAR} 
		AND RECEIVE_TIME <![CDATA[ >= ]]> #{startTime,jdbcType=VARCHAR} 
		AND RECEIVE_TIME <![CDATA[ <= ]]> #{endTime,jdbcType=VARCHAR}
		ORDER BY RECEIVE_TIME ASC
  </select>
  <select id="selectAllTimestamp2" parameterType="java.util.Map" resultMap="TimeResultMap">
	select DISTINCT CONVERT(DATETIME,RECEIVE_TIME) AS RECEIVE_TIME
	from hq_equipment_monitor_data_r 
	where
		EQUIPMENT_ID = #{equipmentId,jdbcType=VARCHAR} 
		AND RECEIVE_TIME <![CDATA[ >= ]]> #{startTime,jdbcType=VARCHAR} 
		AND RECEIVE_TIME <![CDATA[ <= ]]> #{endTime,jdbcType=VARCHAR}
		ORDER BY RECEIVE_TIME ASC
  </select>
  <select id="selectAllTimestamp3" parameterType="java.util.Map" resultMap="TimeResultMap">
	select DISTINCT CONVERT(DATETIME,RECEIVE_TIME) AS RECEIVE_TIME
	from hq_equipment_monitor_data_r 
	where
		EQUIPMENT_ID = #{equipmentId,jdbcType=VARCHAR} 
		AND RECEIVE_TIME <![CDATA[ >= ]]> #{startTime,jdbcType=VARCHAR} 
		AND RECEIVE_TIME <![CDATA[ <= ]]> #{endTime,jdbcType=VARCHAR}
		ORDER BY RECEIVE_TIME ASC
  </select>
  <select id="selectAllTimestamp4" parameterType="java.util.Map" resultMap="TimeResultMap">
	select DISTINCT CONVERT(DATETIME,RECEIVE_TIME) AS RECEIVE_TIME
	from hq_equipment_monitor_data_r 
	where
		EQUIPMENT_ID = #{equipmentId,jdbcType=VARCHAR} 
		AND RECEIVE_TIME <![CDATA[ >= ]]> #{startTime,jdbcType=VARCHAR} 
		AND RECEIVE_TIME <![CDATA[ <= ]]> #{endTime,jdbcType=VARCHAR}
		ORDER BY RECEIVE_TIME ASC
  </select>
  <!-- 获取单一通道在具体时间段内的数据集合 -->
  <select id="selectChanDataByParam" parameterType="java.util.Map" resultMap="TempertureList">
 	select
 		TEMPERATURE
    from hq_equipment_monitor_data_r
    where
		EQUIPMENT_ID = #{equipmentId,jdbcType=VARCHAR}
		AND CHANNEL_NUM = #{channelNum,jdbcType=VARCHAR}
		AND RECEIVE_TIME <![CDATA[ >= ]]> #{startTime,jdbcType=VARCHAR} 
		AND RECEIVE_TIME <![CDATA[ < ]]> #{endTime,jdbcType=VARCHAR}
		ORDER BY
			RECEIVE_TIME ASC
  </select>
  <select id="selectAllFailures" parameterType="java.util.Map" resultMap="BaseResultMap">
 	SELECT
	<include refid="Base_Column_List" /> 
    FROM
	    ${table}  
    WHERE
        1=1
	  AND RECEIVE_TIME <![CDATA[ >= ]]> #{startTime,jdbcType=VARCHAR} 
      AND RECEIVE_TIME <![CDATA[ <  ]]> #{endTime,jdbcType=VARCHAR} 
    ORDER BY
	   EQUIPMENT_NAME,
	   CHANNEL_NUM
  </select>
  <select id="selectYesDayFailures" parameterType="java.util.Map" resultMap="BaseResultMap">
 	SELECT
	t.EQUIPMENT_ID,
	t.EQUIPMENT_NAME,
	t.CHANNEL_NUM,
	t.ADDRESS,
	t.OPTICAL_FIBER_POSITION,
	t.TEMPERATURE,
	t.STATE,
	t.MESSAGE,
	t.RECEIVE_TIME 
FROM
	(
SELECT
	EQUIPMENT_ID,
	MAX( RECEIVE_TIME ) AS RECEIVE_TIME 
FROM
	${table}
WHERE
    EQUIPMENT_ID = #{equipmentId,jdbcType=VARCHAR} 
	AND RECEIVE_TIME <![CDATA[ >= ]]> #{startTime,jdbcType=VARCHAR} 
	AND RECEIVE_TIME <![CDATA[ < ]]> #{endTime,jdbcType=VARCHAR}
GROUP BY
	EQUIPMENT_ID 
	) AS temp
	LEFT JOIN ${table} AS t 
	ON temp.EQUIPMENT_ID = t.EQUIPMENT_ID 
	AND temp.RECEIVE_TIME = t.RECEIVE_TIME
	AND CHANNEL_NUM = #{channelNum,jdbcType=VARCHAR}
ORDER BY
	EQUIPMENT_ID,
	CHANNEL_NUM
  </select>
  
  <select id="selectTodayFirFailures" parameterType="java.util.Map" resultMap="BaseResultMap">
 	SELECT
	t.EQUIPMENT_ID,
	t.EQUIPMENT_NAME,
	t.CHANNEL_NUM,
	t.ADDRESS,
	t.OPTICAL_FIBER_POSITION,
	t.TEMPERATURE,
	t.STATE,
	t.MESSAGE,
	t.RECEIVE_TIME 
FROM
	(
SELECT
	EQUIPMENT_ID,
	MIN( RECEIVE_TIME ) AS RECEIVE_TIME 
FROM
	${table}
WHERE
	RECEIVE_TIME <![CDATA[ >= ]]> #{startTime,jdbcType=VARCHAR} 
	AND RECEIVE_TIME <![CDATA[ < ]]> #{endTime,jdbcType=VARCHAR}
GROUP BY
	EQUIPMENT_ID 
	) AS temp
	LEFT JOIN ${table} AS t 
	ON temp.EQUIPMENT_ID = t.EQUIPMENT_ID 
	AND temp.RECEIVE_TIME = t.RECEIVE_TIME
ORDER BY
	EQUIPMENT_ID,
	CHANNEL_NUM
  </select>
  <select id="selectEqu" parameterType="java.util.Map" resultMap="BaseResultMap">
SELECT DISTINCT
	EQUIPMENT_ID,
	EQUIPMENT_NAME,
	ADDRESS,
	OPTICAL_FIBER_POSITION,
	CHANNEL_NUM  
FROM
	${table} 
WHERE
	RECEIVE_TIME <![CDATA[ >= ]]> #{startTime,jdbcType=VARCHAR} 
	AND RECEIVE_TIME <![CDATA[ < ]]> #{endTime,jdbcType=VARCHAR}
	ORDER BY
	EQUIPMENT_ID,
	CHANNEL_NUM
  </select>
  <!-- 获取所有的通道的最值集合 -->
  <select id="findChannelExtremums" parameterType="java.util.Map" resultMap="ExtremumList">
  	SELECT 
  		CHANNEL_NUM, 
  		MAX(CAST(TEMPERATURE AS DECIMAL(10,1))) MAXINUM, 
  		MIN(CAST(TEMPERATURE AS DECIMAL(10,1))) MININUM
  	FROM
  		${table}
  	WHERE
		EQUIPMENT_ID = #{equipmentId,jdbcType=VARCHAR}
		AND RECEIVE_TIME <![CDATA[ >= ]]> #{startTime,jdbcType=VARCHAR} 
		AND RECEIVE_TIME <![CDATA[ < ]]> #{endTime,jdbcType=VARCHAR}
		AND STATE=5
		GROUP BY
			CHANNEL_NUM 
		ORDER BY
			CAST(REPLACE(CHANNEL_NUM, 'CH','0') AS int) ASC
  </select>
  <delete id="deleteByEquipmentId" >
    delete from HQTemp_Cloud.dbo.${param2}
    where EQUIPMENT_ID = #{param1,jdbcType=VARCHAR}
  </delete>
  <delete id="deleteByEquipmentIf" >
    delete from HQTemp_Cloud.dbo.${param2}
    where EQUIPMENT_ID = #{param1,jdbcType=VARCHAR}
  </delete>
  <delete id="deleteByEquipmentIdd" >
    delete from ${param2}
    where EQUIPMENT_ID = #{param1,jdbcType=VARCHAR}
  </delete>
  <delete id="deleteByEquipmentIdr" >
    delete from ${param2}
    where EQUIPMENT_ID = #{param1,jdbcType=VARCHAR}
  </delete>
  <delete id="deleteByEquipmentIdf" >
    delete from ${param2}
    where EQUIPMENT_ID = #{param1,jdbcType=VARCHAR}
  </delete>
  
  <!-- 获取实时监测数据中的异常监测结果 -->
  <select id="findRealRunningState" resultMap="BaseResultMap">
  	select e.EQUIPMENT_ID,e.EQUIPMENT_NAME,d.STATE
	from hq_equipment_monitor_data_f1 d join hq_equipment_info e on d.EQUIPMENT_ID=e.EQUIPMENT_ID 
	where d.STATE!=5 union
	select e.EQUIPMENT_ID,e.EQUIPMENT_NAME,d.STATE
	from hq_equipment_monitor_data_f2 d join hq_equipment_info e on d.EQUIPMENT_ID=e.EQUIPMENT_ID 
	where d.STATE!=5 union
	select e.EQUIPMENT_ID,e.EQUIPMENT_NAME,d.STATE
	from hq_equipment_monitor_data_f3 d join hq_equipment_info e on d.EQUIPMENT_ID=e.EQUIPMENT_ID 
	where d.STATE!=5 union
	select e.EQUIPMENT_ID,e.EQUIPMENT_NAME,d.STATE
	from hq_equipment_monitor_data_f4 d join hq_equipment_info e on d.EQUIPMENT_ID=e.EQUIPMENT_ID 
	where d.STATE!=5 
  </select>
  <!-- 获取要导出的历史监测数据 -->
  <select id="findReportHistoricalDataTem" parameterType="java.util.Map" resultMap="channelDataMap">
	    select RECEIVE_TIME,
        	max(case CHANNEL_NUM when 'CH1' then convert(numeric(10,2), TEMPERATURE) else -999 end) CH1,
			max(case CHANNEL_NUM when 'CH2' then convert(numeric(10,2), TEMPERATURE) else -999 end) CH2,
			max(case CHANNEL_NUM when 'CH3' then convert(numeric(10,2), TEMPERATURE) else -999 end) CH3,
			max(case CHANNEL_NUM when 'CH4' then convert(numeric(10,2), TEMPERATURE) else -999 end) CH4,
			max(case CHANNEL_NUM when 'CH5' then convert(numeric(10,2), TEMPERATURE) else -999 end) CH5,
			max(case CHANNEL_NUM when 'CH6' then convert(numeric(10,2), TEMPERATURE) else -999 end) CH6,
			max(case CHANNEL_NUM when 'CH7' then convert(numeric(10,2), TEMPERATURE) else -999 end) CH7,
			max(case CHANNEL_NUM when 'CH8' then convert(numeric(10,2), TEMPERATURE) else -999 end) CH8,
			max(case CHANNEL_NUM when 'CH9' then convert(numeric(10,2), TEMPERATURE) else -999 end) CH9,
			max(case CHANNEL_NUM when 'CH10' then convert(numeric(10,2), TEMPERATURE) else -999 end) CH10,
			max(case CHANNEL_NUM when 'CH11' then convert(numeric(10,2), TEMPERATURE) else -999 end) CH11,
			max(case CHANNEL_NUM when 'CH12' then convert(numeric(10,2), TEMPERATURE) else -999 end) CH12,
			max(case CHANNEL_NUM when 'CH13' then convert(numeric(10,2), TEMPERATURE) else -999 end) CH13,
			max(case CHANNEL_NUM when 'CH14' then convert(numeric(10,2), TEMPERATURE) else -999 end) CH14,
			max(case CHANNEL_NUM when 'CH15' then convert(numeric(10,2), TEMPERATURE) else -999 end) CH15,
			max(case CHANNEL_NUM when 'CH16' then convert(numeric(10,2), TEMPERATURE) else -999 end) CH16,
			max(case CHANNEL_NUM when 'CH17' then convert(numeric(10,2), TEMPERATURE) else -999 end) CH17,
			max(case CHANNEL_NUM when 'CH18' then convert(numeric(10,2), TEMPERATURE) else -999 end) CH18
		from ${table} where
			EQUIPMENT_ID = #{equipmentId,jdbcType=VARCHAR} 
			AND RECEIVE_TIME <![CDATA[ >= ]]> #{startTime,jdbcType=VARCHAR} 
			AND RECEIVE_TIME <![CDATA[ <= ]]> #{endTime,jdbcType=VARCHAR} 
			GROUP BY RECEIVE_TIME ORDER BY RECEIVE_TIME ASC
  </select>
  <select id="findReportHistoricalDataPD" parameterType="java.util.Map" resultMap="channelDataMap">
	    select RECEIVE_TIME,
        	max(case CHANNEL_NUM when 'CH1' then convert(numeric(5,0), PD) else 0 end) CH1,
			max(case CHANNEL_NUM when 'CH2' then convert(numeric(5,0), PD) else 0 end) CH2,
			max(case CHANNEL_NUM when 'CH3' then convert(numeric(5,0), PD) else 0 end) CH3,
			max(case CHANNEL_NUM when 'CH4' then convert(numeric(5,0), PD) else 0 end) CH4,
			max(case CHANNEL_NUM when 'CH5' then convert(numeric(5,0), PD) else 0 end) CH5,
			max(case CHANNEL_NUM when 'CH6' then convert(numeric(5,0), PD) else 0 end) CH6,
			max(case CHANNEL_NUM when 'CH7' then convert(numeric(5,0), PD) else 0 end) CH7,
			max(case CHANNEL_NUM when 'CH8' then convert(numeric(5,0), PD) else 0 end) CH8,
			max(case CHANNEL_NUM when 'CH9' then convert(numeric(5,0), PD) else 0 end) CH9,
			max(case CHANNEL_NUM when 'CH10' then convert(numeric(5,0), PD) else 0 end) CH10,
			max(case CHANNEL_NUM when 'CH11' then convert(numeric(5,0), PD) else 0 end) CH11,
			max(case CHANNEL_NUM when 'CH12' then convert(numeric(5,0), PD) else 0 end) CH12,
			max(case CHANNEL_NUM when 'CH13' then convert(numeric(5,0), PD) else 0 end) CH13,
			max(case CHANNEL_NUM when 'CH14' then convert(numeric(5,0), PD) else 0 end) CH14,
			max(case CHANNEL_NUM when 'CH15' then convert(numeric(5,0), PD) else 0 end) CH15,
			max(case CHANNEL_NUM when 'CH16' then convert(numeric(5,0), PD) else 0 end) CH16,
			max(case CHANNEL_NUM when 'CH17' then convert(numeric(5,0), PD) else 0 end) CH17,
			max(case CHANNEL_NUM when 'CH18' then convert(numeric(5,0), PD) else 0 end) CH18
		from ${table} where
			EQUIPMENT_ID = #{equipmentId,jdbcType=VARCHAR} 
			AND RECEIVE_TIME <![CDATA[ >= ]]> #{startTime,jdbcType=VARCHAR} 
			AND RECEIVE_TIME <![CDATA[ <= ]]> #{endTime,jdbcType=VARCHAR} 
			GROUP BY RECEIVE_TIME ORDER BY RECEIVE_TIME ASC
  </select>
  <select id="findReportHistoricalDataUV" parameterType="java.util.Map" resultMap="channelDataMap">
	    select RECEIVE_TIME,
        	max(case CHANNEL_NUM when 'CH1' then convert(numeric(5,0), UV) else 0 end) CH1,
			max(case CHANNEL_NUM when 'CH2' then convert(numeric(5,0), UV) else 0 end) CH2,
			max(case CHANNEL_NUM when 'CH3' then convert(numeric(5,0), UV) else 0 end) CH3,
			max(case CHANNEL_NUM when 'CH4' then convert(numeric(5,0), UV) else 0 end) CH4,
			max(case CHANNEL_NUM when 'CH5' then convert(numeric(5,0), UV) else 0 end) CH5,
			max(case CHANNEL_NUM when 'CH6' then convert(numeric(5,0), UV) else 0 end) CH6,
			max(case CHANNEL_NUM when 'CH7' then convert(numeric(5,0), UV) else 0 end) CH7,
			max(case CHANNEL_NUM when 'CH8' then convert(numeric(5,0), UV) else 0 end) CH8,
			max(case CHANNEL_NUM when 'CH9' then convert(numeric(5,0), UV) else 0 end) CH9,
			max(case CHANNEL_NUM when 'CH10' then convert(numeric(5,0), UV) else 0 end) CH10,
			max(case CHANNEL_NUM when 'CH11' then convert(numeric(5,0), UV) else 0 end) CH11,
			max(case CHANNEL_NUM when 'CH12' then convert(numeric(5,0), UV) else 0 end) CH12,
			max(case CHANNEL_NUM when 'CH13' then convert(numeric(5,0), UV) else 0 end) CH13,
			max(case CHANNEL_NUM when 'CH14' then convert(numeric(5,0), UV) else 0 end) CH14,
			max(case CHANNEL_NUM when 'CH15' then convert(numeric(5,0), UV) else 0 end) CH15,
			max(case CHANNEL_NUM when 'CH16' then convert(numeric(5,0), UV) else 0 end) CH16,
			max(case CHANNEL_NUM when 'CH17' then convert(numeric(5,0), UV) else 0 end) CH17,
			max(case CHANNEL_NUM when 'CH18' then convert(numeric(5,0), UV) else 0 end) CH18
		from ${table} where
			EQUIPMENT_ID = #{equipmentId,jdbcType=VARCHAR} 
			AND RECEIVE_TIME <![CDATA[ >= ]]> #{startTime,jdbcType=VARCHAR} 
			AND RECEIVE_TIME <![CDATA[ <= ]]> #{endTime,jdbcType=VARCHAR} 
			GROUP BY RECEIVE_TIME ORDER BY RECEIVE_TIME ASC
  </select>
  <select id="findReportHistoricalDataState" parameterType="java.util.Map" resultMap="channelDataMap">
	    select RECEIVE_TIME,
        	max(case CHANNEL_NUM when 'CH1' then convert(numeric(5,0), STATE) else 0 end) CH1,
			max(case CHANNEL_NUM when 'CH2' then convert(numeric(5,0), STATE) else 0 end) CH2,
			max(case CHANNEL_NUM when 'CH3' then convert(numeric(5,0), STATE) else 0 end) CH3,
			max(case CHANNEL_NUM when 'CH4' then convert(numeric(5,0), STATE) else 0 end) CH4,
			max(case CHANNEL_NUM when 'CH5' then convert(numeric(5,0), STATE) else 0 end) CH5,
			max(case CHANNEL_NUM when 'CH6' then convert(numeric(5,0), STATE) else 0 end) CH6,
			max(case CHANNEL_NUM when 'CH7' then convert(numeric(5,0), STATE) else 0 end) CH7,
			max(case CHANNEL_NUM when 'CH8' then convert(numeric(5,0), STATE) else 0 end) CH8,
			max(case CHANNEL_NUM when 'CH9' then convert(numeric(5,0), STATE) else 0 end) CH9,
			max(case CHANNEL_NUM when 'CH10' then convert(numeric(5,0), STATE) else 0 end) CH10,
			max(case CHANNEL_NUM when 'CH11' then convert(numeric(5,0), STATE) else 0 end) CH11,
			max(case CHANNEL_NUM when 'CH12' then convert(numeric(5,0), STATE) else 0 end) CH12,
			max(case CHANNEL_NUM when 'CH13' then convert(numeric(5,0), STATE) else 0 end) CH13,
			max(case CHANNEL_NUM when 'CH14' then convert(numeric(5,0), STATE) else 0 end) CH14,
			max(case CHANNEL_NUM when 'CH15' then convert(numeric(5,0), STATE) else 0 end) CH15,
			max(case CHANNEL_NUM when 'CH16' then convert(numeric(5,0), STATE) else 0 end) CH16,
			max(case CHANNEL_NUM when 'CH17' then convert(numeric(5,0), STATE) else 0 end) CH17,
			max(case CHANNEL_NUM when 'CH18' then convert(numeric(5,0), STATE) else 0 end) CH18
		from ${table} where
			EQUIPMENT_ID = #{equipmentId,jdbcType=VARCHAR} 
			AND RECEIVE_TIME <![CDATA[ >= ]]> #{startTime,jdbcType=VARCHAR} 
			AND RECEIVE_TIME <![CDATA[ <= ]]> #{endTime,jdbcType=VARCHAR} 
			GROUP BY RECEIVE_TIME ORDER BY RECEIVE_TIME ASC
  </select>
</mapper>